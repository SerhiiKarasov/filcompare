name: filcompare

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler_version:
          - 7
          - 8
        compiler:
          - gcc
        build_type:
          - Release
        include:
          # setup gcov variables for extra compiler versions
          - compiler: llvm
            gcov: "llvm-cov gcov"
          - compiler: gcc-8
            gcov: "gcov-8"

    steps:
    - name: install gcovr
      run: sudo apt-get -y install gcovr
    - uses: actions/checkout@v1
    - name: googletests_submodule_init
      run: git submodule update --init
    - name: docker_image_build
      run: docker build --network=host -t build_filcompare .
    - name: run_build_in_docker
      run: docker run --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare
    - name: cmake_format
      run: docker run --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare python3 -m cmakelang.format -c .cmake-format.yaml --check CMakeLists.txt tests/CMakeLists.txt src/CMakeLists.txt submodules/CMakeLists.txt
    - name: cppcheck-ver
      run: docker run --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare cppcheck --version
    - name: cppcheck
      run: docker run --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare cppcheck --error-exitcode=0 --force --include=/usr/include --suppress=missingIncludeSystem --enable=all src/
    - name: cpplint
      run: docker run --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare cpplint --filter=-whitespace,-readability,-legal,-build/include_order src/*pp

    - name: Clang build
      run: |
        docker run --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare bash -c \
        "  rm -rfv build                                                                  \
        && mkdir build                                                                    \
        && cd build                                                                       \
        && export CC=/usr/bin/clang                                                       \
        && export CXX=/usr/bin/clang++                                                    \
        && cmake -DCMAKE_VERBOSE_MAKEFILE=TRUE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DOPT_ENABLE_COVERAGE:BOOL=ON ..      \
        && cmake --build . --parallel                                                     \
        "

    - name: clang-tidy
      run: docker run --rm --user $(id -u):$(id -g) -v $PWD:/opt/project build_filcompare clang-tidy -p build/ -header-filter=.* -extra-arg=-std=c++17 -checks=*,-fuchsia*,-hicpp*,-llvm-header-guard,-llvm-include-order,-google-readability-braces-around-statements,-readability-avoid-const-params-in-decls,-modernize-use-trailing-return-type,-llvmlibc* src/*pp