language: cpp
dist: focal

addons:
  apt:
    sources: 
      - ubuntu-toolchain-r-test
    packages:
      - g++-9
      - libacl1-dev
      - libcap-dev
      - libsqlite3-dev
      - zlib1g-dev
  coverity_scan:
    project:
      name: "filcompare"
      description: "Build submitted via Travis CI"
    build_command_prepend: "cmake -DENABLE_TEST_COVERAGE=1 -D ENABLE_COVERAGE:BOOL=TRUE -D CMAKE_EXPORT_COMPILE_COMMANDS=ON -D CMAKE_BUILD_TYPE:STRING=Debug . "
    build_command:   "cmake --build . -- -j2"
    branch_pattern: coverity_scan
      
matrix:
  include:
    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - GCC_VER="9" CPPCHECK=1 COVERAGE=1 CMAKE_OPTIONS="-D RUN_FUZZY_TESTS:BOOL=TRUE"
    - os: linux
      compiler: clang
      packages:
        - clang-9
        - libstdc++-9-dev
      env:
        - CMAKE_OPTIONS="-D CMAKE_CXX_COMPILER="/bin/clang++-9" -D CMAKE_C_COMPILER="/bin/clang-9" ENABLE_TEST_COVERAGE=1 -D DYNLOAD_ENABLED:BOOL=FALSE -D MULTITHREAD_SUPPORT_ENABLED:BOOL=FALSE -D CMAKE_EXPORT_COMPILE_COMMANDS=ON -D USE_STD_MAKE_SHARED:BOOL=TRUE" BUILD_ONLY=1
  
before_install:
  - if [ "${GCC_VER}" != "" ]; then export CXX="g++-$GCC_VER" CC="gcc-$GCC_VER" GCOV="gcov-$GCC_VER" ; fi
  - pip install --user cpp-coveralls

script: 
  - cmake -D ENABLE_TEST_COVERAGE=1 -D ENABLE_COVERAGE:BOOL=TRUE -D CMAKE_BUILD_TYPE:STRING=Debug $CMAKE_OPTIONS . 
  - cmake --build . -- -j2
  - if [ "${BUILD_ONLY}" != "1" ]; then ctest; fi
  - if [ "${COVERAGE}" = "1" ]; then bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/master/codecov) -x $GCOV -a "-s `pwd`" ; fi